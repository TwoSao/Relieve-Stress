import customtkinter as ctk
from ui.components.frame import Frame
from ui.components.label import Label
from ui.components.buttons import Button
from ui.buttons.notes.notes_view import NotesView
from ui.buttons.notes.add_notes import Add_Note
from ui.buttons.notes.manage_notes import ManageNotes
from ui.style import set_theme, get_color, get_font
from ui.assistant.view import AssistantView
from ui.assistant.logic import AssistantLogic

class MainWindow(ctk.CTk):
    def __init__(self):
        super().__init__()



        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã
        self.current_theme_name = "light"
        set_theme(self.current_theme_name)


        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
        self.title("Relieve Stress")
        self.geometry("1200x960")
        self.minsize(700, 850)
        self.configure(fg_color=get_color("COLOR_BG"))
        self.iconbitmap(self,"assets/icon.ico")
        # –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—Ä–µ–π–º—ã
        self._create_widgets()

        # –ó–∞—Ç–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è
        self._init_views()

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ
        self.show_notes()
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
        self.assistant_logic = AssistantLogic(api_key="API_KEY")
        self.assistant_view = AssistantView(
            self.content_frame,
            on_send_message=self.assistant_logic.get_response
        )
        # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –æ–∫–Ω–æ
        self.center_window()

    def _create_widgets(self):
        """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        self.title_label = Label(
            self,
            text="Relieve Stress",
            font=get_font("FONT_TITLE"),
            text_color=get_color("COLOR_TEXT")
        )
        self.title_label.pack(pady=(20, 15))

        # –ü–∞–Ω–µ–ª—å –∫–Ω–æ–ø–æ–∫
        self.buttons_frame = Frame(
            self,
            fg_color=get_color("COLOR_FRAME_BG"),
            corner_radius=8
        )
        self.buttons_frame.pack(fill="x", padx=20, pady=(0, 15))

        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        self.btn_show_notes = Button(
            self.buttons_frame,
            text="–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–º–µ—Ç–∫–∏",
            command=self.show_notes
        )
        self.btn_show_notes.pack(side="left", padx=10, pady=5)

        self.btn_manage_notes = Button(
            self.buttons_frame,
            text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∞–º–∏",
            command=self.show_manage_notes
        )
        self.btn_manage_notes.pack(side="left", padx=10, pady=5)

        # –ö–Ω–æ–ø–∫–∞ —Å–º–µ–Ω—ã —Ç–µ–º—ã
        self.theme_toggle_btn = Button(
            self.buttons_frame,
            text="üåô" if self.current_theme_name == "light" else "‚òÄÔ∏è",
            command=self.toggle_theme,
            width=40
        )
        self.theme_toggle_btn.pack(side="left", padx=10, pady=5)

        # –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
        self.exit_button = Button(
            self.buttons_frame,
            text="–í—ã—Ö–æ–¥",
            command=self.destroy
        )
        self.exit_button.pack(side="right", padx=10, pady=5)

        self.btn_assistant = Button(
            self.buttons_frame,
            text="AI",
            command=self.show_assistant,
            fg_color=get_color("COLOR_ACCENT")
        )
        self.btn_assistant.pack(side="left", padx=10, pady=5)

    # –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (—Ç–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–µ—Ç—Å—è –¥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π)
        self.content_frame = Frame(
            self,
            fg_color=get_color("COLOR_FRAME_BG"),
            corner_radius=8
        )
        self.content_frame.pack(fill="both", expand=True, padx=20, pady=(0, 20))

    def _init_views(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è"""
        self.notes_view = NotesView(
            self.content_frame,
            show_add_note=self.show_add_note
        )
        self.add_note_view = Add_Note(
            self.content_frame,
            on_note_added=self.on_note_added
        )
        self.manage_notes_view = ManageNotes(
            self.content_frame,
            on_update=self.on_notes_updated,
            on_add_note=self.show_add_note
        )

    # –û—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π...
    def center_window(self):
        """–¶–µ–Ω—Ç—Ä–∏—Ä—É–µ—Ç –æ–∫–Ω–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ"""
        self.update_idletasks()
        width = self.winfo_width()
        height = self.winfo_height()
        x = (self.winfo_screenwidth() // 2) - (width // 2)
        y = (self.winfo_screenheight() // 2) - (height // 2)
        self.geometry(f"{width}x{height}+{x}+{y}")

    def toggle_theme(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Ç–µ–º—É –º–µ–∂–¥—É —Å–≤–µ—Ç–ª–æ–π –∏ —Ç–µ–º–Ω–æ–π"""
        self.current_theme_name = "dark" if self.current_theme_name == "light" else "light"
        set_theme(self.current_theme_name)

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –∫–Ω–æ–ø–∫–∏ —Ç–µ–º—ã
        self.theme_toggle_btn.configure(
            text="üåô" if self.current_theme_name == "light" else "‚òÄÔ∏è"
        )

        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞
        self.configure(fg_color=get_color("COLOR_BG"))
        self.buttons_frame.configure(fg_color=get_color("COLOR_FRAME_BG"))
        self.content_frame.configure(fg_color=get_color("COLOR_FRAME_BG"))

        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        self.title_label.configure(
            text_color=get_color("COLOR_TEXT"),
            font=get_font("FONT_TITLE")
        )

        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
        buttons = [
            self.btn_show_notes,
            self.btn_manage_notes,
            self.theme_toggle_btn,
            self.exit_button,
            self.btn_assistant
        ]

        for btn in buttons:
            btn.update_theme()

        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è
        self.notes_view.update_theme()
        self.add_note_view.update_theme()
        self.manage_notes_view.update_theme()
        self.assistant_view.update_theme()

    def clear_content(self):
        """–û—á–∏—â–∞–µ—Ç –æ–±–ª–∞—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
        for widget in self.content_frame.winfo_children():
            widget.pack_forget()

    def show_notes(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å –∑–∞–º–µ—Ç–∫–∞–º–∏"""
        self.clear_content()
        self.notes_view.pack(fill="both", expand=True, padx=10, pady=10)

    def show_add_note(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏"""
        self.clear_content()
        self.add_note_view.pack(fill="both", expand=True, padx=10, pady=10)

    def on_note_added(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–º–µ—Ç–∫–∏"""
        self.notes_view.refresh_notes()
        self.add_note_view.notes = self.notes_view.notes
        self.manage_notes_view.refresh()
        self.show_manage_notes()
        self.manage_notes_view.status_label.configure(
            text="–ó–∞–º–µ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞! –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.",
            text_color=get_color("COLOR_SUCCESS")
        )

    def show_manage_notes(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∞–º–∏"""
        self.clear_content()
        self.manage_notes_view.pack(fill="both", expand=True, padx=10, pady=10)
        self.manage_notes_view.refresh()

    def on_notes_updated(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–º–µ—Ç–æ–∫"""
        self.notes_view.refresh_notes()
        self.add_note_view.notes = self.notes_view.notes
        self.show_notes()

    def show_assistant(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"""
        self.clear_content()
        self.assistant_view.pack(fill="both", expand=True, padx=10, pady=10)
